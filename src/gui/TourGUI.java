
package gui;

import utils.TourFiles;
import objects.Tour;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import interfaces.TourManager;

import java.awt.Color;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Doan Van Quan
 */
public class TourGUI extends javax.swing.JPanel {
	private TourManager tour = new Tour();
	private short n = 10;
	private String pathFile = "Tour.bin";
	private DefaultTableModel tblModel = null;
	private TourFiles tourFiles = new TourFiles();
	private int currentIndex = 0;
	private ArrayList<Tour> list = new ArrayList<>();

	/**
	 * Creates new form Form
	 */
	public TourGUI() {
		initComponents();
		initTable();
		getList();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		jLabel2 = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		jLabel1 = new javax.swing.JLabel();
		txtTourID = new javax.swing.JTextField();
		txtTourName = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		txtTourPrice = new javax.swing.JTextField();
		txtTourTotal = new javax.swing.JTextField();
		txtTourTime = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		txtTourTravel = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		txtTourNP = new javax.swing.JTextField();
		panel1 = new java.awt.Panel();
		btnAdd = new javax.swing.JButton();
		btnDelete = new javax.swing.JButton();
		btnEdit = new javax.swing.JButton();
		btnSearchByName = new javax.swing.JButton();
		btnSearchByTime = new javax.swing.JButton();
		btnSearchByPrice = new javax.swing.JButton();
		btnSearchByNP = new javax.swing.JButton();
		btnSearchByTravel = new javax.swing.JButton();
		btnSortByPrice = new javax.swing.JButton();
		btnOpenList = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblListTour = new javax.swing.JTable();
		jSeparator2 = new javax.swing.JSeparator();
		jLabel9 = new javax.swing.JLabel();
		btnFirstIndex = new javax.swing.JButton();
		btnPrevIndex = new javax.swing.JButton();
		btnNextIndex = new javax.swing.JButton();
		btnLastIndex = new javax.swing.JButton();
		lbRecord = new javax.swing.JLabel();

		jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Program Tour Manager");

		jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel1.setText("Tour ID:");

		txtTourID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		txtTourID.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtTourIDActionPerformed(evt);
			}
		});

		txtTourName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

		jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel3.setText("Tour Name: ");

		jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel4.setText("Tour Price:");

		jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel5.setText("Tour Total:");

		txtTourPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

		txtTourTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

		txtTourTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

		jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel6.setText("Tour Time:");

		jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel7.setText("Tour Travel:");

		txtTourTravel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

		jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		jLabel8.setText("Tour Number Person:");

		btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnAdd.setText("Add");
		btnAdd.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddActionPerformed(evt);
			}
		});

		btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnDelete.setText("Delete");
		btnDelete.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDeleteActionPerformed(evt);
			}
		});

		btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnEdit.setText("Edit");
		btnEdit.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnEditActionPerformed(evt);
			}
		});

		btnSearchByName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSearchByName.setText("Search By Name");
		btnSearchByName.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchByNameActionPerformed(evt);
			}
		});

		btnSearchByTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSearchByTime.setText("Search By Time");
		btnSearchByTime.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchByTimeActionPerformed(evt);
			}
		});

		btnSearchByPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSearchByPrice.setText("Search By Price");
		btnSearchByPrice.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchByPriceActionPerformed(evt);
			}
		});

		btnSearchByNP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSearchByNP.setText("Search By NP");
		btnSearchByNP.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchByNPActionPerformed(evt);
			}
		});

		btnSearchByTravel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSearchByTravel.setText("Search By Travel");
		btnSearchByTravel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSearchByTravelActionPerformed(evt);
			}
		});

		btnSortByPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnSortByPrice.setText("Sort By Price");
		btnSortByPrice.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSortByPriceActionPerformed(evt);
			}
		});

		btnOpenList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		btnOpenList.setText("Open List");
		btnOpenList.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOpenListActionPerformed(evt);
			}
		});

		JButton btnReport = new JButton("Report");
		btnReport.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnReportActionPerformed(evt);
			}
		});
		btnReport.setFont(new Font("Segoe UI", Font.BOLD, 14));

		javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
		panel1Layout.setHorizontalGroup(panel1Layout.createParallelGroup(Alignment.LEADING).addGroup(panel1Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(panel1Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(Alignment.TRAILING, panel1Layout.createSequentialGroup()
								.addGroup(panel1Layout.createParallelGroup(Alignment.LEADING).addComponent(btnAdd)
										.addComponent(btnDelete).addComponent(btnEdit).addComponent(btnSortByPrice))
								.addPreferredGap(ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
								.addGroup(panel1Layout.createParallelGroup(Alignment.LEADING)
										.addComponent(btnSearchByNP).addComponent(btnSearchByName)
										.addComponent(btnSearchByTime).addComponent(btnSearchByPrice)))
						.addGroup(Alignment.TRAILING,
								panel1Layout.createSequentialGroup().addComponent(btnOpenList)
										.addPreferredGap(ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
										.addComponent(btnSearchByTravel))
						.addComponent(btnReport))
				.addContainerGap()));
		panel1Layout.setVerticalGroup(panel1Layout.createParallelGroup(Alignment.LEADING).addGroup(panel1Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(panel1Layout
						.createParallelGroup(Alignment.BASELINE).addComponent(btnAdd).addComponent(btnSearchByName))
				.addGap(18)
				.addGroup(panel1Layout
						.createParallelGroup(Alignment.BASELINE).addComponent(btnDelete).addComponent(btnSearchByTime))
				.addGap(18)
				.addGroup(panel1Layout
						.createParallelGroup(Alignment.BASELINE).addComponent(btnEdit).addComponent(btnSearchByPrice))
				.addGap(18)
				.addGroup(panel1Layout.createParallelGroup(Alignment.BASELINE).addComponent(btnSearchByNP)
						.addComponent(btnSortByPrice))
				.addGap(18)
				.addGroup(panel1Layout.createParallelGroup(Alignment.BASELINE).addComponent(btnSearchByTravel)
						.addComponent(btnOpenList))
				.addGap(18).addComponent(btnReport).addContainerGap(35, Short.MAX_VALUE)));
		panel1.setLayout(panel1Layout);

		tblListTour.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
		tblListTour
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		tblListTour.setRowHeight(30);
		tblListTour.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tblListTourMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tblListTour);

		jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
		jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel9.setText("List Tour");

		btnFirstIndex.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnFirstIndex.setText("|<");
		btnFirstIndex.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFirstIndexActionPerformed(evt);
			}
		});

		btnPrevIndex.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnPrevIndex.setText("<<");
		btnPrevIndex.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnPrevIndexActionPerformed(evt);
			}
		});

		btnNextIndex.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnNextIndex.setText(">>");
		btnNextIndex.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnNextIndexActionPerformed(evt);
			}
		});

		btnLastIndex.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		btnLastIndex.setText(">|");
		btnLastIndex.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLastIndexActionPerformed(evt);
			}
		});

		lbRecord.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		lbRecord.setText("jLabel10");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jSeparator1)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup()
												.addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 118,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(417, 417, 417))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup()
												.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 288,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(328, 328, 328))))
				.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jSeparator2).addContainerGap())
				.addGroup(layout.createSequentialGroup().addGap(25, 25, 25).addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addComponent(jLabel8).addGap(18, 18, 18)
								.addComponent(txtTourNP, javax.swing.GroupLayout.PREFERRED_SIZE, 99,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
										.addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addComponent(jLabel6).addComponent(jLabel7)).addGap(40, 40, 40)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(txtTourTime, javax.swing.GroupLayout.DEFAULT_SIZE, 343,
												Short.MAX_VALUE)
										.addComponent(txtTourTotal)
										.addComponent(txtTourTravel, javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(txtTourID).addComponent(txtTourName).addComponent(txtTourPrice))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(10, 10, 10))
				.addComponent(jScrollPane1)
				.addGroup(layout.createSequentialGroup().addGap(289, 289, 289).addComponent(btnFirstIndex)
						.addGap(18, 18, 18).addComponent(btnPrevIndex).addGap(18, 18, 18).addComponent(btnNextIndex)
						.addGap(18, 18, 18).addComponent(btnLastIndex).addGap(18, 18, 18).addComponent(lbRecord,
								javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(194, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(9, 9, 9).addComponent(jLabel2).addGap(18, 18, 18)
				.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1)
								.addComponent(txtTourID, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txtTourName, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel3))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel4)
										.addComponent(txtTourPrice, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txtTourTotal, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel5))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel6).addComponent(txtTourTime,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel7).addComponent(txtTourTravel,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(30, 30, 30)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jLabel8)
										.addComponent(txtTourNP, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))))
				.addGap(16, 16, 16)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(btnFirstIndex).addComponent(btnPrevIndex).addComponent(btnNextIndex)
						.addComponent(btnLastIndex).addComponent(lbRecord))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane1,
						javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addContainerGap(28, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * tao cac truong cua bang
	 *
	 */
	public void initTable() {
		tblModel = new DefaultTableModel();
		tblModel.setColumnIdentifiers(new Object[] { "Product ID", "Procduct Name", "Product Price", "Product Total",
				"Tour Time", "Tour Travel", "Tour Number Person" });
		tblListTour.setModel(tblModel);
	}

	/**
	 * tao cac du lieu gia
	 *
	 */
	public void getList() {
		try {
			ArrayList<Tour> tmp = new ArrayList<>();
			tourFiles.binaryOutFile(pathFile, n);
			tmp = tourFiles.binaryInputFile(pathFile, n);
			tmp.forEach(p -> tour.list.add(p));
			list = (ArrayList<Tour>) tour.list;
		} catch (IOException | ClassNotFoundException ex) {
			Logger.getLogger(TourGUI.class.getName()).log(Level.SEVERE, null, ex);
		}
		fillData(list);
	}

	/**
	 * do du lieu vao bang
	 *
	 */
	public void fillData(ArrayList<Tour> l) {
		tblModel.setRowCount(0);
		for (Tour tourP : l) {
			Object[] object = { tourP.getProduct_id(), tourP.getProduct_name(), tourP.getProduct_price(),
					tourP.getProduct_total(), tourP.getTour_time(), tourP.getTour_travel(),
					tourP.getTour_numberPerson() };
			tblModel.addRow(object);
		}
		lbRecord.setText("Tour " + (currentIndex + 1) + " Of " + list.size());
		tblModel.fireTableDataChanged();
	}

	/**
	 * hien thi phan tu duoc chon len cac textfield
	 *
	 */

	public void renderTour(int index, ArrayList<Tour> list) {
		txtTourID.setText(list.get(index).getProduct_id());
		txtTourName.setText(list.get(index).getProduct_name());
		txtTourPrice.setText(String.valueOf(list.get(index).getProduct_price()));
		txtTourTotal.setText(String.valueOf(list.get(index).getProduct_total()));
		txtTourTime.setText(list.get(index).getTour_time());
		txtTourTravel.setText(list.get(index).getTour_travel());
		txtTourNP.setText(String.valueOf(list.get(index).getTour_numberPerson()));
		lbRecord.setText("Tour " + (index + 1) + " Of " + list.size());

	}

	/**
	 *
	 * phuong thuc cap nhat va doc lai ra man hinh
	 */

	public void updateListTour(long pos) throws ClassNotFoundException, IOException {
		ArrayList<Tour> tmp = new ArrayList<>();
		tourFiles.updateOutFile(pathFile, (ArrayList<Tour>) tour.list);
		tmp = tourFiles.listAfterUpdateFile(pathFile, tour.list.size(), pos);
		tour.list.clear();
		tmp.forEach(p -> tour.list.add(p));
	}

	/**
	 *
	 * phuong thuc reset textfield
	 */
	public void resetTextfield() {
		txtTourID.setText("");
		txtTourName.setText("");
		txtTourPrice.setText("");
		txtTourTotal.setText("");
		txtTourTime.setText("");
		txtTourTravel.setText("");
		txtTourNP.setText("");
	}

	/**
	 *
	 * phuong thuc kiem tra txtfield co rong khong
	 */
	public boolean checkNull() {

		StringBuilder sb = new StringBuilder();
		if (txtTourID.getText().equals("")) {
			sb.append("Khong duoc de trong id!\n");

			txtTourID.setBackground(Color.red);
		} else {

			txtTourID.setBackground(Color.white);
		}
		if (txtTourName.getText().equals("")) {
			sb.append("Khong duoc de trong ten hanh trinh!\n");

			txtTourName.setBackground(Color.red);
		} else {

			txtTourName.setBackground(Color.white);

		}
		if (txtTourPrice.getText().equals("")) {
			sb.append("Khong duoc de trong chi phi hanh trinh!\n");

			txtTourPrice.setBackground(Color.red);
		} else {

			txtTourPrice.setBackground(Color.white);

		}
		if (txtTourTotal.getText().equals("")) {
			sb.append("Khong duoc de trong so luong hanh trinh\n");

			txtTourTotal.setBackground(Color.red);
		} else {

			txtTourTotal.setBackground(Color.white);

		}
		if (txtTourTotal.getText().equals("")) {
			sb.append("Khong duoc de trong so luong hanh trinh\n");

			txtTourTotal.setBackground(Color.red);
		} else {

			txtTourTotal.setBackground(Color.white);

		}
		if (txtTourTime.getText().equals("")) {
			sb.append("Khong duoc de trong thoi gian hanh trinh\n");

			txtTourTime.setBackground(Color.red);
		} else {

			txtTourTime.setBackground(Color.white);

		}
		if (txtTourTravel.getText().equals("")) {
			sb.append("Khong duoc de trong diem den luong hanh trinh\n");

			txtTourTravel.setBackground(Color.red);
		} else {

			txtTourTravel.setBackground(Color.white);

		}
		if (txtTourNP.getText().equals("")) {
			sb.append("Khong duoc de trong so nguoi tham gia luong hanh trinh\n");

			txtTourNP.setBackground(Color.red);
		} else {

			txtTourNP.setBackground(Color.white);

		}
		if (sb.length() > 0) {
			JOptionPane.showMessageDialog(this, sb.toString(), "Error", JOptionPane.ERROR_MESSAGE);
			return false;
		}
		return true;
	}

	/**
	 *
	 * phuong thuc di chuyen ve dau danh sach
	 */
	public void firstIndex() {
		currentIndex = 0;

	}

	/**
	 *
	 * phuong thuc di chuyen dan ve cuoi danh sach
	 */
	public void nextIndex() {
		if (currentIndex < list.size() - 1) {
			currentIndex++;
		}
	}

	/**
	 *
	 * phuong thuc di chuyen dan ve dau danh sach
	 */
	public void prevIndex() {
		if (currentIndex > 0) {
			currentIndex--;
		}
	}

	/**
	 *
	 * phuong thuc di chuyen ve phan tu cuoi trong danh sach
	 */
	public void lastIndex() {
		currentIndex = list.size() - 1;
	}

	private void txtTourIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTourIDActionPerformed

	}// GEN-LAST:event_txtTourIDActionPerformed

	/**
	 *
	 * phuong thuc su kien tim kiem tour theo thoi gian
	 */

	private void btnSearchByTimeActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchByTimeActionPerformed
		currentIndex = 0;
		if (txtTourTime.getText().equals("")) {
			txtTourTime.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong thoi gian hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourTime.setBackground(Color.white);

		list = (ArrayList<Tour>) tour.searchTourByTime(txtTourTime.getText());

		if (list.size() != 0) {
			fillData(list);
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Tìm kiếm hành trình theo thời gian.");
			return;
		}
		JOptionPane.showMessageDialog(this, "Khong tim thay thoi gian hanh trinh phu hop");

		return;

	}

	/**
	 *
	 * phuong thuc su kien tim kiem tour theo chi phi
	 */
	private void btnSearchByPriceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchByPriceActionPerformed

		currentIndex = 0;
		if (txtTourPrice.getText().equals("")) {
			txtTourPrice.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong chi phi hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourPrice.setBackground(Color.white);

		list = (ArrayList<Tour>) tour.searchTour(Double.parseDouble(txtTourPrice.getText()));
		if (list.size() != 0) {
			fillData(list);
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Tìm kiếm hành trình theo giá.");
			return;
		}
		JOptionPane.showMessageDialog(this, "Khong tim thay chi phi hanh trinh phu hop");

		return;
	}// GEN-LAST:event_btnSearchByPriceActionPerformed

	/**
	 *
	 * phuong thuc su kien them tour moi
	 */
	private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed

		currentIndex = 0;
		Tour t = new Tour(txtTourID, txtTourName, txtTourPrice, txtTourTotal, txtTourTime, txtTourTravel, txtTourNP);
		long pos = tourFiles.getPos(pathFile);
		if (!checkNull())
			return;
		if (tour.addTour(t)) {
			try {

				updateListTour(pos);
				resetTextfield();

			} catch (IOException | ClassNotFoundException ex) {
				Logger.getLogger(TourGUI.class.getName()).log(Level.SEVERE, null, ex);
			}
			list = (ArrayList<Tour>) tour.list;
			fillData(list);
			JOptionPane.showMessageDialog(this, "Da them thanh cong hanh trinh vao kho");
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Đã thêm một hành trình mới.");
			return;
		}

		JOptionPane.showMessageDialog(this, "Hanh trinh da ton tai trong kho", "Error", JOptionPane.ERROR_MESSAGE);
		return;

	}// GEN-LAST:event_btnAddActionPerformed

	/**
	 *
	 * phuong thuc su kien xoa tour
	 */
	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDeleteActionPerformed
		currentIndex = 0;
		Tour t = new Tour(txtTourID, txtTourName, txtTourPrice, txtTourTotal, txtTourTime, txtTourTravel, txtTourNP);
		long pos = tourFiles.getPos(pathFile);
		if (txtTourID.getText().equals("")) {
			txtTourID.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong id hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourID.setBackground(Color.white);
		if (tour.delTour(t)) {
			try {
				updateListTour(pos);
				resetTextfield();

			} catch (IOException | ClassNotFoundException ex) {
				Logger.getLogger(TourGUI.class.getName()).log(Level.SEVERE, null, ex);
			}
			list = (ArrayList<Tour>) tour.list;
			fillData(list);
			JOptionPane.showMessageDialog(this, "Da xóa thanh cong hanh trinh");
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Đã xóa một hành trình được chọn.");
			return;
		}

		JOptionPane.showMessageDialog(this, "Hanh trinh khong ton tai trong kho", "Error", JOptionPane.ERROR_MESSAGE);
		return;
	}// GEN-LAST:event_btnDeleteActionPerformed

	/**
	 *
	 * phuong thuc su kien sua tour
	 */
	private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEditActionPerformed

		currentIndex = 0;
		Tour t = new Tour(txtTourID, txtTourName, txtTourPrice, txtTourTotal, txtTourTime, txtTourTravel, txtTourNP);
		long pos = tourFiles.getPos(pathFile);
		if (!checkNull())
			return;
		if (tour.editTour(t)) {
			try {
				updateListTour(pos);
				resetTextfield();
			} catch (IOException | ClassNotFoundException ex) {
				Logger.getLogger(TourGUI.class.getName()).log(Level.SEVERE, null, ex);
			}
			list = (ArrayList<Tour>) tour.list;
			fillData(list);
			JOptionPane.showMessageDialog(this, "Da sua thanh cong hanh trinh");
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Đã sửa một hành trình được chọn.");
			return;
		}

		JOptionPane.showMessageDialog(this, "Hanh trinh khong ton tai trong kho", "Error", JOptionPane.ERROR_MESSAGE);
		return;

	}// GEN-LAST:event_btnEditActionPerformed

	/**
	 *
	 * phuong thuc su kien sap xep tour theo chi phi
	 */
	private void btnSortByPriceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSortByPriceActionPerformed

		currentIndex = 0;
		if (txtTourPrice.getText().equals("")) {
			txtTourPrice.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong chi phi hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourPrice.setBackground(Color.white);
		try {

			list = (ArrayList<Tour>) tour.sortedTour(Double.parseDouble(txtTourPrice.getText()));
			long pos = tourFiles.getPos(pathFile);
			tourFiles.updateOutFile(pathFile, list);
			fillData(tourFiles.listAfterUpdateFile(pathFile, list.size(), pos));
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Sắp xếp các hành trình theo giá.");
			return;
		} catch (IOException | ClassNotFoundException ex) {
			Logger.getLogger(TourGUI.class.getName()).log(Level.SEVERE, null, ex);
		}

	}// GEN-LAST:event_btnSortByPriceActionPerformed

	/**
	 *
	 * phuong thuc su kien tim kiem theo ten tour
	 */
	private void btnSearchByNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchByNameActionPerformed

		currentIndex = 0;
		if (txtTourName.getText().equals("")) {
			txtTourName.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong ten phi hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourName.setBackground(Color.white);

		list = (ArrayList<Tour>) tour.searchTour(txtTourName.getText());
		if (list.size() != 0) {
			fillData(list);
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Tìm kiếm hành trình theo tên.");
			return;
		}
		JOptionPane.showMessageDialog(this, "Khong tim thay ten hanh trinh trong danh sach");

		return;
	}// GEN-LAST:event_btnSearchByNameActionPerformed

	/**
	 *
	 * phuong thuc su kien tim kiem theo so nguoi tham gia tour
	 */
	private void btnSearchByNPActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchByNPActionPerformed

		currentIndex = 0;
		if (txtTourNP.getText().equals("")) {
			txtTourNP.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong so nguoi tham gia hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourNP.setBackground(Color.white);

		list = (ArrayList<Tour>) tour.searchTour(Integer.parseInt(txtTourNP.getText()));
		if (list.size() != 0) {
			fillData(list);
			resetTextfield();
			MenuGUI.statusInfoList.addElement("Tìm kiếm hành trình theo số lượng người.");
			return;
		}

		JOptionPane.showMessageDialog(this, "Khong tim thay so nguoi tham gia phu hop");

		return;

	}// GEN-LAST:event_btnSearchByNPActionPerformed

	/**
	 *
	 * phuong thuc su kien tim kiem theo diem den tour
	 */
	private void btnSearchByTravelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSearchByTravelActionPerformed

		currentIndex = 0;
		if (txtTourTravel.getText().equals("")) {
			txtTourTravel.setBackground(Color.red);
			JOptionPane.showMessageDialog(this, "Khong duoc de trong diem den hanh trình", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		txtTourTravel.setBackground(Color.white);

		list = (ArrayList<Tour>) tour.searchTourByTravel(txtTourTravel.getText());
		if (list.size() != 0) {
			fillData(list);
			MenuGUI.statusInfoList.addElement("Tìm kiếm hành trình theo điểm đến.");
			return;
		}
		JOptionPane.showMessageDialog(this, "Khong tim thay diem den hanh trinh phu hop");
		return;

	}// GEN-LAST:event_btnSearchByTravelActionPerformed

	private void tblListTourMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tblListTourMouseClicked
		int index = tblListTour.getSelectedRow();
		currentIndex = index;
		renderTour(index, list);

	}// GEN-LAST:event_tblListTourMouseClicked

	private void btnFirstIndexActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFirstIndexActionPerformed
		firstIndex();
		renderTour(currentIndex, list);
	}// GEN-LAST:event_btnFirstIndexActionPerformed

	private void btnPrevIndexActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPrevIndexActionPerformed
		prevIndex();
		renderTour(currentIndex, list);
	}// GEN-LAST:event_btnPrevIndexActionPerformed

	private void btnNextIndexActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnNextIndexActionPerformed

		nextIndex();
		renderTour(currentIndex, list);
	}

	private void btnLastIndexActionPerformed(java.awt.event.ActionEvent evt) {
		lastIndex();
		renderTour(currentIndex, list);
	}

	private void btnOpenListActionPerformed(java.awt.event.ActionEvent evt) {
		list = (ArrayList<Tour>) tour.list;
		fillData(list);
		MenuGUI.statusInfoList.addElement("Xem danh sách hành trình.");
	}

	private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {
		list = (ArrayList<Tour>) tour.list;
		try {
			tourFiles.reportFiles("report.bin", list.size(), list);
			MenuGUI.statusInfoList.addElement("Đã báo cáo các hành trình.");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TourGUI.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TourGUI.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TourGUI.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TourGUI.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TourGUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAdd;
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnEdit;
	private javax.swing.JButton btnFirstIndex;
	private javax.swing.JButton btnLastIndex;
	private javax.swing.JButton btnNextIndex;
	private javax.swing.JButton btnOpenList;
	private javax.swing.JButton btnPrevIndex;
	private javax.swing.JButton btnSearchByNP;
	private javax.swing.JButton btnSearchByName;
	private javax.swing.JButton btnSearchByPrice;
	private javax.swing.JButton btnSearchByTime;
	private javax.swing.JButton btnSearchByTravel;
	private javax.swing.JButton btnSortByPrice;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JLabel lbRecord;
	private java.awt.Panel panel1;
	private javax.swing.JTable tblListTour;
	private javax.swing.JTextField txtTourID;
	private javax.swing.JTextField txtTourNP;
	private javax.swing.JTextField txtTourName;
	private javax.swing.JTextField txtTourPrice;
	private javax.swing.JTextField txtTourTime;
	private javax.swing.JTextField txtTourTotal;
	private javax.swing.JTextField txtTourTravel;
	// End of variables declaration//GEN-END:variables
}
